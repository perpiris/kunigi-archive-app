@model TeamManagerDetailsViewModel
@{
    ViewData["Title"] = $"{Model.TeamName} - Διαχειριστές";
    ViewData["Banner"] = ViewData["Title"];
}
<div class="row">
    <div class="col-md-6">
        <div class="card shadow-lg border-0 mt-2 h-100">
            <div class="card-body p-5">
                <h5 class="mb-4">Προσθήκη Διαχειριστή</h5>
                @if (Model.AvailableUsers.Any())
                {
                    <form asp-action="AddManager" asp-route-idOrSlug="@Model.Slug" method="post">
                        <div class="mb-4">
                            <label for="userSearchInput" class="form-label fw-semibold">Αναζήτηση και Επιλογή Χρήστη</label>
                            <div class="position-relative">
                                <input type="text" id="userSearchInput" class="form-control form-control-lg" placeholder="Πληκτρολογήστε για αναζήτηση..." autocomplete="off" />
                                <input type="hidden" name="userId" id="selectedUserId" />
                                <div id="userDropdown" class="position-absolute w-100 bg-white border rounded shadow-sm" style="top: 100%; left: 0; z-index: 1000; display: none; max-height: 200px; overflow-y: auto;">
                                    @foreach (var user in Model.AvailableUsers)
                                    {
                                        <div class="dropdown-item px-3 py-2" style="cursor: pointer;" data-value="@user.ApplicationUserId" data-email="@user.Email.ToLower()">
                                            @user.Email
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary btn-lg">Προσθήκη Διαχειριστή</button>
                            <a asp-action="Actions" asp-route-idOrSlug="@Model.Slug" class="btn btn-secondary btn-lg">Επιστροφή</a>
                        </div>
                    </form>
                }
                else
                {
                    <div class="text-center py-4">
                        <p class="text-muted mt-3">Δεν υπάρχουν διαθέσιμοι χρήστες για προσθήκη ως διαχειριστές.</p>
                        <div class="d-grid">
                            <a asp-action="Actions" asp-route-idOrSlug="@Model.Slug" class="btn btn-secondary btn-lg mt-2">Επιστροφή</a>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    
    <div class="col-md-6">
        <div class="card shadow-lg border-0 mt-2 h-100">
            <div class="card-body p-5">
                <h5 class="mb-4">Τρέχοντες Διαχειριστές</h5>
                @if (Model.CurrentManagers.Any())
                {
                    <div class="list-group">
                        @foreach (var manager in Model.CurrentManagers)
                        {
                            <div class="list-group-item d-flex justify-content-between align-items-center py-3">
                                <span>@manager.Email</span>
                                <form asp-action="RemoveManager" asp-route-idOrSlug="@Model.Slug" method="post">
                                    <input type="hidden" name="userId" value="@manager.ApplicationUserId"/>
                                    <button type="submit" class="btn btn-danger">Αφαίρεση</button>
                                </form>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="text-center py-4">
                        <p class="text-muted mt-3">Δεν υπάρχουν διαχειριστές για αυτή την ομάδα.</p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const searchInput = document.getElementById('userSearchInput');
            const dropdown = document.getElementById('userDropdown');
            const hiddenInput = document.getElementById('selectedUserId');
            const dropdownItems = Array.from(dropdown.children);
            
            searchInput.addEventListener('input', function() {
                const searchTerm = this.value.toLowerCase();
                let hasVisibleItems = false;
                
                dropdownItems.forEach(item => {
                    const email = item.getAttribute('data-email');
                    const matches = email.includes(searchTerm);
                    item.style.display = matches ? 'block' : 'none';
                    if (matches) hasVisibleItems = true;
                });
                
                if (hasVisibleItems && searchTerm.length > 0) {
                    dropdown.style.display = 'block';
                } else {
                    dropdown.style.display = 'none';
                }
                
                // Clear selection if text doesn't match exactly
                hiddenInput.value = '';
            });
            
            searchInput.addEventListener('focus', function() {
                if (this.value.length > 0) {
                    dropdown.style.display = 'block';
                }
            });
            
            // Handle dropdown item clicks
            dropdownItems.forEach(item => {
                item.addEventListener('click', function() {
                    const email = this.textContent.trim();
                    const value = this.getAttribute('data-value');
                    
                    searchInput.value = email;
                    hiddenInput.value = value;
                    dropdown.style.display = 'none';
                });
                
                // Add hover effect
                item.addEventListener('mouseenter', function() {
                    this.style.backgroundColor = '#f8f9fa';
                });
                
                item.addEventListener('mouseleave', function() {
                    this.style.backgroundColor = '';
                });
            });
            
            // Hide dropdown when clicking outside
            document.addEventListener('click', function(e) {
                if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {
                    dropdown.style.display = 'none';
                }
            });
            
            // Form validation
            const form = searchInput.closest('form');
            form.addEventListener('submit', function(e) {
                if (!hiddenInput.value) {
                    e.preventDefault();
                    alert('Παρακαλώ επιλέξτε έναν χρήστη από τη λίστα');
                }
            });
        });
    </script>
}